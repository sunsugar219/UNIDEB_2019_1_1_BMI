BMI Projekt
Rendszerterv

A rendszer célja
Mivel programtervező informatikusként ülő munkát végzünk, ezért kiemelt 
fontosságú, hogy külön figyelmet fordítsunk az egészséges életmódra.
Ennek része az is, hogy a súlyunkat folyamatosan ellenőrizzük, és megelőzzük
az elhízást. Ennek nyomon követésére szolgál a BMI kalkulátorunk, amely 
a nem, magasság és súly paraméterek alapján kiszámolja és kiértékeli a 
felhasználó BMI indexét egy Android alkalmazásban. Ehhez szükség van 
intuitív felhasználói felületre, hibabiztos üzleti logikára és megfelelően
összeállított projektre.

Projekt terv
-Projektszerepkörök, felelősségek:
csak szoftver fejlesztők dolgoznak a projekten, egyéb szerepkört a projekt nem igényel.
-Projektmunkások és felelősségeik:
Az alábbi szoftver fejlesztők munkájára van szükség :
Sohajda Alex: UI
Török Iza: Bemenetet kezelő függvények
Németh Máté : Kimenetet kezelő függvények
Hódi Zsuzsa : projekt összeállítása, resource kezelés, hordozhatóság
-Ütemterv:
Projekt tervezése: szeptember 23.
Projekt összeállítása: szeptember 24.
Resource kezelés : szeptember 25.
BMI-érték kiírása: szeptember 26.
Tipp kiírása: szeptember 27.
Hordozhatóság: szeptember 29.
-Mérföldkövek:
Projektterv elkészítése
Források előkészítése
Felhasználói felület elkészítése
Üzleti logika elkészítése
Projekt összeállítása


Üzleti folyamatok modellje
-Üzleti szereplők:
Felhasználó: aki megadja a nemét, magasságát (cm-ben) és a súlyát (kg-ban)
azért, hogy az alkalmazásunk megadja neki a BMI indexét, és annak a kiértékelését.
-Üzleti folyamatok: 
Adatok beolvasása: a felhasználói felületről a felhasználó által megadott adatok
bevitele az üzleti logika egyik függvényének paramétereként.
BMI index kiszámítása: kg/m^2 alapján az applikáció kiszámítja a BMI indexet
a bevitt adatok alapján
BMI index értékelése: a BMI indexet kategóriákba sorolja, és ez alapján
kiértékeli a felhasználó számára érthető módon.
Eredmények kiírása: az üzleti logika utolsó lépése tájékoztatja a 
felhasználót a számított eredményről, és egy, az eredményhez tartozó 
véletlenszerű javaslatról.
-Üzleti entitások: 
RadioGroup: Ennek segítségével választja ki a felhasználó a nemét
EditText: Ennek segítségével adja meg a felhasználó a magasságát, súlyát
Button: ennek segítségével viszi be a felhasználó az adatait
Toast pop-up ablak: ez az ablak informálja a felhasználót, ha helytelen
adatokat adott meg
TextView: Ennek segítségével tájékoztatjuk a felhasználót a megadott adatok
alapján kiszámított BMI indexről, és az ahhoz tartozó röviden megfogalmazott
véleményről.

Követelmények
-Funkcionális követelmények: funkcionálisan azt várjuk az applikációtól, 
hogy helyesen megadott paraméterek alapján kiszámolja a BMI indexet,
és ahhoz kiértékelést társítson. 
-Nem  funkcionális követelmények: szükséges, hogy valódi értékek esetén 
számoljon csak eredményt, egyéb esetben a bevitt érték átgondolására 
kérjük a felhasználót. 
Fontos, hogy több méretű Android eszközön fusson az applikáció.
Fontos, hogy ha csupán magyar nyelvű környezetre írjuk, akkor is könnyen
biztosítható legyen a többnyelvűség.
-Törvényi előírások, szabványok: mivel a felhasználó adatait nem tároljuk,
ezért külön törvényi előírást nem kell figyelembe vennünk.

Funkcionális terv
-Határosztály: ActivityMain.java osztályon belül oldjuk meg a felhasználói 
felülettel történő kapcsolatot, az értékek beolvasását és kiértékelését.
-Képernyőtervek: A felhasználói felületet egyszerűen, átláthatóan kívánom
megoldani.A program nem követel bonyolultabb felhasználó felületet.
A képernyőt két részre kívánom osztani.Az első felében az adatok bevitele, 
míg a második felében a kiszámolt eredményt íratjuk ki a képernyőre.Egy radiobutton
segítségével választhatjuk ki a nemüket, alatta pedig szövegmezőkben adhatjuk
meg a magasságunkat centiméterben és a súlyunkat kilógrammban megadva.
Ezek az adatok bevitele után a SZÁMOL gombra kattintva a porgram kiítja a képernyő második felére
az eredményt.Csatolt képen megtekinthető a felhasználó felület terve(BMI_UI_kepepernyoterv.jpg).

Fizikai környezet
-Vásárolt softwarekomponensek és külső rendszerek: Picasso library használata 
szükséges lehet, amennyiben a háttérképet online tárolóból töltjük be.
-Hardver és hálózati topológia: Android 5 a minimális elvárt Android 
verzió az eszközökön (SDK 21)
-Fejlesztő eszközök: Android Studio 3.5, programozási nyelv: Java

Absztrakt domain modell
MainActivity osztály biztosítja a felhasználói felületet, ezen belül találjuk a nézeteket.
EditText mezők beolvassák a súlyt és a magasságot, mely alapján a BMI index kiszámítódik.
A BMI index tartományait kijelöljük a felhasználó nemét is figyelembe véve,
és ezek alapján visszaadjuk azt a szöveget, amelyet már a felhasználó is tud értelmezni.
Ez jelenik majd meg egy TextView mezőben.

Architekturális terv
-Egy architekturális tervezési minta:3-rétegű alkalmazás az adatbázis réteg nélkül 
-Az alkalmazás rétegei, fő komponensei, ezek kapcsolatai:
Rétegek :UI, logikai réteg, adatbázis nem szükséges az alkalmazáshoz 
Kapcsolataik:a felhasználói felület nevesített nézeteinek azonosítói az R-ben
kerülnek tárolásra a layout-ot reprezentáló xml fájlból. Ezeket a findViewById 
függvény köti a Java kódban lévő logikai réteg szereplőihez.
-Változások kezelése: új Android rendszer, IDE vagy Gradle esetén 
a Gradle scriptek átírása
-Rendszer bővíthetősége:  lokációhoz és a  céleszköz méreteihez a resource-okkal 
kapcsolódik, ezeket az xml file-okat kell bővíteni új céllokáció vagy céleszköz
esetén
-Biztonsági funkciók: A szoftver bizonyos határok között engedi az adatok megadását.
Ezek egyszerű if feltételek implementálásával megvalósítható. Hálózati biztonságra 
nincs szükség, mivel internetkapcsolat nem szükséges a használathoz.

Implementációs terv
A programban nem bonyolítjuk az osztályokat, ezért szükség lesz egy fő osztályra, és ezen belül
megoldjuk az indokolt alpontokat: 
-Perzisztencia
Egy ilyen kalkulátorszerű szoftvernél nem szükséges a perzisztencia viszont jó ha mégis van. 
Ha a szó jelentését nézzük, ez nem más mint a „tartós fennmaradás”, akkor megértjük, hogy ez 
valójában mi is az. Perzisztenciára az adatok tárolásánál van szükség, pontosabban amikor a 
felhasználó beírja a kért adatokat, akkor a program képes ezeket tárolni egy bizonyos ideig. 
Ha például az utolsó belépés óta nem változott a felhasználó súlya, akkor kiválasztható az eddigi
érték, ami előző használatkor beírásra került. Ez a felhasználó dolgát könnyíti meg, mert nem
szükséges újabb adat beírása, csak abban az esetben ha változás történt.
-Üzleti logika
Az üzleti logika rétegnek a fő feladata az a folyamatok logikai jellemzése. Ebben az esetben egy 
kalkulátorról beszélünk, aminek fő feladata a számítás. Minden számolás egy képlet segítségével
történik, úgy ahogy a BMI index (testtömeg-index) kiszámításához is egy képletre van szükség:
testtömeg[kg]/magasság[m]^2. Értelemszerűen a képlet alapján a kilogrammban kifejezett testtömeget 
elosztjuk a méterben kifejezett magasság négyzetével. A művelet elvégzését követően kapunk egy 
bizonyos értéket és ehhez társul egy kiértékelés is. A testsúlyosztályozási táblázat segítségével
tárul elénk a megfelelő kiértékelés. Táblázat alapján négy esetünk lehet: alultáplált, egészséges,
túlsúlyos és extrém túlsúlyos. Ezek értékei a felhasználó nemétől függenek. A nőknél alultáplált 
ha a BMI index kisebb mint 18.5, egészséges ha  18.5 és 25 között van, túlsúlyos ha 25 és 30 között 
van és extrém túlsúlyos, ha 30-nál nagyobb a BMI index értéke. A férfiaknál alultáplált ha a BMI 
index 22.5-nél kisebb, egészséges ha 22.5 és 29 között van, túlsúlyos ha 29 és 34 között van és 
extrém túlsúlyos ha 34-nél nagyobb a BMI index értéke. A kiértékelésekhez társulnak bizonyos tanácsok, 
amik elárulják, hogyan érheted el a kívánt eredményt, és ezáltal hogyan folytass egészséges életmódot.
A program if-else szerkezetek segítségével hajtja végre a különbőző besorolásba való osztáyozást.
Ezen belül a kiértékeléshez tartozó tanácsokat switch-case utasítások hajtják végre, és TextView elemeken
jelenítődik meg.
-Kliensoldal
A kliensoldal az nem más, mint maga az input. Ez az adatok beírását tartalmazza, ami billentyűzetről 
történik. A BMI index kalkulátornál három adat megadása lényeges a magasság, a testtömeg és a nem. 
Ahhoz hogy a lehető legkevesebb adatot legyen szükséges a felhasználónak beírni, létrehozunk egy
radiobutton-t, aminek segítségével kényelmesen kiválaszthatja a nemét. Így nem adhat meg hibás 
adatot és csak egy választási lehetőséget választhat ki, mert a program ellenőrzi ezt. Nem választható 
egyszerre mindkettő. Ez egy logikai értékkel könnyen megoldható, ezért boolean-t használunk és ezáltal 
megvizsgáljuk, hogy kiválasztásra került-e a felhasználó neme.
A felhasználó kiválasztja a nemét, beírja a magasságát és a testtömegét, ezekután van egy Button 
funkció, amivel megtörténik az adatok beolvasása és megtörténik a kiértékelés.


Tesztterv
Az üzleti logika nem igényel komolyabb tesztelést, két a logika két részét kell tesztelni, az egyik
a BMI-indexet kiszámító algoritmus tesztje, a másik pedig a bmi-értékhez hozzárendelt szöveget teszteli.
Telepítési terv
A telepítés az android beépített csomagtelepítővel történik
Karbantartási terv
A program karbantartást nem igényel, legfeljebb újabb android verziókkal való kompatibilitási problémák
merülhetnek fel, azok megoldása szükséges.
